<template>
    <!-- <div :id="id" :uid="uid" class="zm-component-main" :style="{position: 'absolute', width: style.width+'px',height: style.height+'px',left: style.left+'px',top: style.top+'px',zIndex: style.zIndex}" @mousedown.stop.prevent.left="mousedown" @contextmenu.stop.prevent="openMenu"> -->
    <!-- 视频 -->
    <div @click.stop="bannerOneClick" class="zm-component-banner zm-component-banner-one" data-type-banner="video" v-show="nowData.type=='video'" :style="{width: style.width,height: style.height}">
        <div class="zm-bg-banner-Video">
            <video :src="nowData?nowData.src : src" :poster="nowData?nowData.poster : ''" autoplay="true"  ref="video"></video>
        </div>
        <span v-show="svgShow" class="span-video iconfont icon-videoBgyulan"></span>
        <div class="zm-bg-banner-vein" :style="{backgroundImage:texturePicture}"></div>
        <div class="zm-banner-resizeL" v-show='resizeShow'><svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 20 180.1 212.7" preserveAspectRatio="none"><g><polyline points="56.4,89.8 90.4,56.5 123.7,89.8"></polyline><polyline points="123.7,172.8 89.7,206.1 56.4,172.8"></polyline><path d="M31.1,113.4 149,113.4"></path><path d="M31.1,148.2 149,148.2"></path></g></svg></div>
        <div class="zm-banner-resizeR" v-show='resizeShow'><svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 20 180.1 212.7" preserveAspectRatio="none"><g><polyline points="56.4,89.8 90.4,56.5 123.7,89.8"></polyline><polyline points="123.7,172.8 89.7,206.1 56.4,172.8"></polyline><path d="M31.1,113.4 149,113.4"></path><path d="M31.1,148.2 149,148.2"></path></g></svg></div>
    </div>

  <!-- </div> -->
</template>
<script>
export default {
  props: ['dataList','index','widthList'],
  data () {
    return {
      resizeShow:false,
      svgShow:true,
      src: 'http://image.zuma.com/upload/979283244190044195.mp4',
      bannerTitle:"横条背景",
      nowIndex: 0,
      id: '',
      uid: '',
      inrowlayer: '',
      style: {
          width: '100%',
          height: '100%',
          left: 0,
          top: 0,
          zIndex: 0,
          rotate: 0
      },
      pattern: [1,0,1,0,1,0,1,0],
      isShowRotateBtn: true,
    }
  },
  computed:{
      nowData(){
          return zmEditor.$store.state.background.settingData.previewBannerData || {type: 'video', src: this.src};
      }
  },
  // mixins: [ mixin ],//混入
  methods:{
      cl2(){
        event.currentTarget.getAttribute("title").trim() == "编辑" ? this.bannerTitle = "横条背景" : this.bannerTitle = "横条设置"
        event.currentTarget.getAttribute("title").trim() == "编辑" ? this.nowIndex = 0 : this.nowIndex = 1;
        zmEditor.$store.commit('changePaneData', {key: 'paneType', value: true});
        zmEditor.$store.commit('changePaneData', {key: 'paneTitle', value: this.bannerTitle});
        zmEditor.$store.commit('setBackgroundData', {key: 'previewBannerData', value: {type: 'video', src: this.src}});
        zmEditor.$store.commit('changePaneData', {key: 'paneMode', value: "setImage"});
        zmEditor.$store.commit('setBackgroundData', {key: 'nowShowStyle', value: 'img'});
        zmEditor.$store.commit('setBackgroundData', {key: 'tabBannerIndex', value: this.nowIndex});
        zmEditor.$store.commit('setBackgroundData', {key: 'controlBannerVideo', value: this.$refs.video});
        zmEditor.$store.commit('setBackgroundData', {key: 'comType', value: 'banner'});
        console.log(zmEditor.$store.state.background.settingData)
        console.log(zmEditor.$store.state.background.settingData.previewContainerData)
    },
    bannerOneClick(){
      let obj = {type: 'video', src: this.src}
      this.$emit("titleChanged",this.index,obj,this.$refs.video)
      this.resizeShow = !this.resizeShow
    }
  },
  mounted:function(){
  }
 }
</script>
<style scoped>
  .zm-component-main{
      width: 1903px;
      height: 300px;
      display: inline-block;
  }
  .zm-component-banner{
    width: 100%;
    height: 100%;
    position:relative;
  }

  .zm-bg-banner-PIC{
    width: 100%;
    height: 100%;
    background-size:cover; 
    background-position: center;
    background-repeat: no-repeat;
  }

  .zm-bg-banner-BGC{
    width: 100%;
    height: 100%;
  }

  .zm-bg-banner-Video{
    width: 100%;
    height: 100%;
    overflow:hidden
  }
  video{
    object-fit: cover;
    width:100%;
    height:100%;
  }
  .span-video{
    display: inline-block; 
    width: 30px; 
    height: 30px; 
    position: absolute; 
    left: 3px; 
    bottom: 2px; 
    color: rgb(255, 255, 255); 
    font-size: 28px;
    /* background-color:red */
  }
  .zm-bg-banner-vein{
    z-index:1;
    width: 100%; 
    height: 100%;

    left:0px;
    top:0px;
    position:absolute;
  }

  .zm-banner-resizeR,
  .zm-banner-resizeL {
  top: 10%;
  height: 20px;
  width: 18px;
  margin-top: -9px;
  background-color: #fff;
  position: absolute;
  cursor: w-resize;
  z-index: 2;
  transform: rotate(90deg);
  background: -webkit-gradient(linear, 0 0, 0 bottom, from(#fff), to(#e6e6e6));
  border-radius: 2px;
  border: 1px solid #e4e4e4;
  box-shadow: 0 0 5px rgba(218, 227, 233, 0.6);
  user-select: none;
  }
  .zm-banner-resizeR svg,
  .zm-banner-resizeL svg {
  width: 100%;
  height: 100%;
  stroke: #c9c9c9;
  fill: none;
  stroke-width: 12px;
  }
  .zm-banner-resizeR > svg:hover,
  .zm-banner-resizeL > svg:hover {
    fill: #3089d5;
  }
  .zm-banner-resizeR {
    right: -10px;
  }
  .zm-banner-resizeL {
    left: -10px;
  }
</style>
